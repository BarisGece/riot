plugins {
    id 'org.asciidoctor.jvm.convert'
    id 'org.ajoberstar.git-publish' version '3.0.0'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'org.jreleaser' version '0.2.0'
}

project.rootProject.ext.theVersion = file('VERSION').text.trim()

allprojects { p ->
    p.version = p.rootProject.ext.theVersion
}

repositories {
    mavenCentral()
}

asciidoctor {
    sourceDir 'docs'
    resources {
        from ('docs/images') {
            include 'riot.svg'
            include 'architecture.png'
            include 'mapping.png'
            include 'favicon.svg'
        }
        from("riot-file/src/test/resources/files") {
            include '*.*'
        }
    }
}

gitPublish {
    repoUri = 'https://github.com/redis-developer/riot.git'
    referenceRepoUri = 'file:///Users/jruaux/git/riot/'
    branch = 'gh-pages'
    contents {
        from 'build/docs/asciidoc'
    }
}

def isNonStable = { String version ->
    def nonStableKeyword = ['PREVIEW'].any { it -> version.toUpperCase().contains(it) }
    def stableKeyword = ['RELEASE', 'FINAL', 'GA', 'JRE8'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+([.-]r)?$/
    return nonStableKeyword || (!stableKeyword && !(version ==~ regex))
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

jreleaser {
    project {
        name = 'riot'
        description = 'Redis Input/Output Tools'
        longDescription = 'Get data in and out of Redis with RIOT'
        website = 'https://developer.redislabs.com/riot'
        authors = ['Julien Ruaux']
        tags = ['redis']
        license = 'Apache-2.0'
        java {
            multiProject = true
        }
    }
    release {
        github {
            username = 'jruaux'
            owner = 'redis-developer'
            overwrite = true
        }
    }
    distributions {
        db {
            executable = 'riot-db'
            brew {
                active = 'release'
                formulaName = 'riot-db'
            }
            scoop {
                active = 'release'
            }
            artifacts {
                artifact {
                    path = "riot-db/build/distributions/riot-db-${version}.zip"
                }
            }
            java {
                artifactId = 'riot-db'
            }
        }
        file {
            executable = 'riot-file'
            brew {
                active = 'release'
                formulaName = 'riot-file'
            }
            scoop {
                active = 'release'
            }
            artifacts {
                artifact {
                    path = "riot-file/build/distributions/riot-file-${version}.zip"
                }
            }
            java {
                artifactId = 'riot-file'
            }
        }
        gen {
            executable = 'riot-gen'
            brew {
                active = 'release'
                formulaName = 'riot-gen'
            }
            scoop {
                active = 'release'
            }
            artifacts {
                artifact {
                    path = "riot-gen/build/distributions/riot-gen-${version}.zip"
                }
            }
            java {
                artifactId = 'riot-gen'
            }
        }
        redis {
            executable = 'riot-redis'
            brew {
                active = 'release'
                formulaName = 'riot-redis'
            }
            scoop {
                active = 'release'
            }
            artifacts {
                artifact {
                    path = "riot-redis/build/distributions/riot-redis-${version}.zip"
                }
            }
            java {
                artifactId = 'riot-redis'
            }
        }
        stream {
            executable = 'riot-stream'
            brew {
                active = 'release'
                formulaName = 'riot-stream'
            }
            scoop {
                active = 'release'
            }
            artifacts {
                artifact {
                    path = "riot-stream/build/distributions/riot-stream-${version}.zip"
                }
            }
            java {
                artifactId = 'riot-stream'
            }
        }
    }
}

gitPublishPush.dependsOn asciidoctor