config {
    info {
        description = 'Redis Input/Output Tools'
        inceptionYear = '2020'
        vendor = 'Redis Labs'
        tags = ['redis', 'data', 'import', 'export', 'generator', 'file', 'sql', 'replication']
        links {
            website = 'https://github.com/redis-developer/${project.rootProject.name}'
            issueTracker = 'https://github.com/redis-developer/${project.rootProject.name}/issues'
            scm = 'https://github.com/redis-developer/${project.rootProject.name}.git'
        }

        scm {
            url = "https://github.com/redis-developer/${project.rootProject.name}"
            connection = "scm:git:https://github.com/redis-developer/${project.rootProject.name}.git"
            developerConnection = "scm:git:git@github.com:redis-developer/${project.rootProject.name}.git"
        }

        specification {
            enabled = true
        }

        implementation {
            enabled = true
        }

        people {
            person {
                id = 'jruaux'
                name = 'Julien Ruaux'
                roles = ['developer', 'author']
            }
        }
    }

    licensing {
        enabled = false
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
        }
    }
}

allprojects {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/redis-developer/registry")
            credentials {
                username = project.findProperty("github.username") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
        mavenLocal()
    }

    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}

subprojects {
    config {
        info {
            description = project.project_description
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.junit.jupiter:junit-jupiter-params'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    }

    configurations {
        all*.exclude module: 'spring-boot-starter-logging'
    }

    test {
        useJUnitPlatform()
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
        archiveClassifier = ''
    }
}


jreleaser {
    project {
        longDescription = 'Get data in and out of Redis with RIOT'
        website = 'https://developer.redislabs.com/riot'
        copyright = '2021 Julien Ruaux'
        java {
            multiProject = true
        }
    }
    release {
        github {
            owner = 'redis-developer'
            overwrite = true
        }
    }
    distributions {
        ['riot-db', 'riot-file', 'riot-gen', 'riot-redis', 'riot-stream'].each { n ->
            "$n" {
                brew {
                    active = 'release'
                    formulaName = "${n}"
                }
                scoop {
                    active = 'release'
                    bucket {
                        name = 'scoop'
                    }
                }
                artifacts {
                    artifact {
                        path = "connectors/{{distributionName}}/build/distributions/{{distributionName}}-{{projectVersion}}.zip"
                    }
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}
