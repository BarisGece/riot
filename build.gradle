config {
    info {
        description = 'Redis Input/Output Tools'
        inceptionYear = '2020'
        vendor = 'Redis'
        tags = ['redis', 'data', 'import', 'export', 'generator', 'file', 'sql', 'replication']
        links {
            website = 'https://github.com/redis-developer/${project.rootProject.name}'
            issueTracker = 'https://github.com/redis-developer/${project.rootProject.name}/issues'
            scm = 'https://github.com/redis-developer/${project.rootProject.name}.git'
        }
        scm {
            url = "https://github.com/redis-developer/${project.rootProject.name}"
            connection = "scm:git:https://github.com/redis-developer/${project.rootProject.name}.git"
            developerConnection = "scm:git:git@github.com:redis-developer/${project.rootProject.name}.git"
        }
        specification {
            enabled = true
        }
        implementation {
            enabled = true
        }
        people {
            person {
                id = 'jruaux'
                name = 'Julien Ruaux'
                roles = ['developer', 'author']
            }
        }
        publishing {
            signing {
                enabled = true
            }
        }
    }
    licensing {
        enabled = false
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }
    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
        }
        sourceHtml {
            enabled = false
        }
    }
}

allprojects {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        mavenLocal()
    }
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }
}

subprojects {
    config {
        info {
            description = project.project_description
        }
    }

    license {
        exclude('build/**')
    }

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter"
        testImplementation "org.junit.jupiter:junit-jupiter-params"
        testImplementation group: 'commons-io', name: 'commons-io', version: commonsIoVersion
        testImplementation group: 'org.codehaus.plexus', name: 'plexus-utils', version:plexusVersion    
        testImplementation group: 'com.redis.testcontainers', name: 'testcontainers-redis', version: testcontainersRedisVersion
        testImplementation group: 'com.redis.testcontainers', name: 'junit-jupiter', version: testcontainersVersion

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    }

    test {
        useJUnitPlatform()
    }

    bootJar {
        enabled = false
    }

    jar {
        enabled = true
        archiveClassifier = ''
    }

    configurations {
        all*.exclude module: 'spring-boot-starter-logging'
    }
    
    sourceCompatibility = 8
    targetCompatibility = 8

}
